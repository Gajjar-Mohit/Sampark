version: '3.8'

services:
  # PostgreSQL Database for Project 1
  postgres-project1:
    image: postgres:15-alpine
    container_name: postgres-project1
    restart: unless-stopped
    environment:
      POSTGRES_DB: project1_db
      POSTGRES_USER: project1_user
      POSTGRES_PASSWORD: project1_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_project1_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - project1-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U project1_user -d project1_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Express App for Project 1
  app-project1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app-project1
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://project1_user:project1_password@postgres-project1:5432/project1_db
      PORT: 3000
    depends_on:
      postgres-project1:
        condition: service_healthy
    networks:
      - project1-network
    volumes:
      - ./src:/usr/src/app/src:ro
      - ./prisma:/usr/src/app/prisma:ro
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        bunx prisma migrate deploy &&
        bun run src/index.ts
      "

networks:
  project1-network:
    driver: bridge

volumes:
  postgres_project1_data: